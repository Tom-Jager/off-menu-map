{"version":3,"sources":["Map.tsx","Marker.tsx","MarkerList.tsx","PlaceList.tsx","RestaurantList.tsx","UserMarker.tsx","App.tsx","index.tsx"],"names":["deepCompareEqualsForMaps","createCustomEqual","deepEqual","a","b","isLatLngLiteral","google","maps","LatLng","equals","useDeepCompareMemoize","value","ref","React","current","Map","onClick","onIdle","callback","dependencies","children","style","options","map","setMap","window","setOptions","child","Marker","marker","setMarker","infoWindow","setInfoWindow","markerListener","remove","newMarker","addListener","updateRestaurant","restaurantName","event","removeListener","podcasters","content","podcaster","join","url","InfoWindow","openRestaurant","open","undefined","close","MarkerList","markers","restaurants","restaurantData","position","location","setOpenRestaurant","push","compareRestaurant","restaurant","localeCompare","PlaceList","props","listItems","sort","data","restaurantPodcasters","ListGroup","Item","action","variant","Row","Col","href","getItems","keys","key","name","id","clearFilterIfEmpty","inputEvent","setSearchState","target","RestaurantList","setRestaurant","area","setArea","setPodcaster","listOfAreas","s3RestaurantData","areas","Set","add","Array","from","values","getListOfAreas","listOfPodcasters","p","getListOfPodcasters","areaItems","areaSearchBox","showIcon","items","onSelect","result","onClear","onFocus","input","podcasterItems","podcasterSearchBox","restaurantItems","Object","restaurantSearchBox","restaurantsToDisplay","areaFilter","podcasterFilter","includes","filterRestaurants","placeList","sm","UserMarker","render","status","londonLatLng","lat","lng","handleGetCurrentPosition","success","failure","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","_error","ErrorMessage","error","resetErrorBoundary","role","App","s3Data","setS3Data","userLocation","setUserLocation","center","setCenter","axios","create","get","then","console","log","userAgent","indexOf","permissions","query","state","onchange","ev","this","restaurantList","newRestaurant","buttonStyle","focusUserLocationButton","Button","disabled","userLocationMarker","icon","fillColor","fillOpacity","strokeWeight","strokeColor","path","faCircle","scale","anchor","x","y","other","clickable","FallbackComponent","Helmet","Container","apiKey","zoom","Spinner","animation","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0760c93e.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { createCustomEqual } from \"fast-equals\";\r\nimport { isLatLngLiteral } from \"@googlemaps/typescript-guards\";\r\n\r\ninterface MapProps extends google.maps.MapOptions {\r\n  style: { [key: string]: string };\r\n  onClick?: (e: google.maps.MapMouseEvent) => void;\r\n  onIdle?: (map: google.maps.Map) => void;\r\n}\r\n\r\nconst Map: React.FC<MapProps> = ({\r\n  onClick,\r\n  onIdle,\r\n  children,\r\n  style,\r\n  ...options\r\n}) => {\r\n  // [START maps_react_map_component_add_map_hooks]\r\n  const ref = React.useRef<HTMLDivElement>(null);\r\n  const [map, setMap] = React.useState<google.maps.Map>();\r\n\r\n  React.useEffect(() => {\r\n    if (ref.current && !map) {\r\n      setMap(new window.google.maps.Map(ref.current, {}));\r\n    }\r\n  }, [ref, map]);\r\n  // [END maps_react_map_component_add_map_hooks]\r\n\r\n  // [START maps_react_map_component_options_hook]\r\n  // because React does not do deep comparisons, a custom hook is used\r\n  // see discussion in https://github.com/googlemaps/js-samples/issues/946\r\n  useDeepCompareEffectForMaps(() => {\r\n    if (map) {\r\n      map.setOptions(options);\r\n    }\r\n  }, [map, options]);\r\n  // [END maps_react_map_component_options_hook]\r\n\r\n  // [START maps_react_map_component_return]\r\n  return (\r\n    <>\r\n      <div ref={ref} style={style} />\r\n      {React.Children.map(children, (child) => {\r\n        if (React.isValidElement(child)) {\r\n          // set the map prop on the child component\r\n          return React.cloneElement(child, { map });\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n  // [END maps_react_map_component_return]\r\n};\r\n\r\nconst deepCompareEqualsForMaps = createCustomEqual(\r\n  (deepEqual) => (a: any, b: any) => {\r\n    if (\r\n      isLatLngLiteral(a) ||\r\n      a instanceof google.maps.LatLng ||\r\n      isLatLngLiteral(b) ||\r\n      b instanceof google.maps.LatLng\r\n    ) {\r\n      return new google.maps.LatLng(a).equals(new google.maps.LatLng(b));\r\n    }\r\n\r\n    // TODO extend to other types\r\n\r\n    // use fast-equals for other objects\r\n    return deepEqual(a, b);\r\n  }\r\n);\r\n\r\nfunction useDeepCompareMemoize(value: any) {\r\n  const ref = React.useRef();\r\n\r\n  if (!deepCompareEqualsForMaps(value, ref.current)) {\r\n    ref.current = value;\r\n  }\r\n\r\n  return ref.current;\r\n}\r\n\r\nfunction useDeepCompareEffectForMaps(\r\n  callback: React.EffectCallback,\r\n  dependencies: any[]\r\n) {\r\n  React.useEffect(callback, dependencies.map(useDeepCompareMemoize));\r\n}\r\n\r\nexport default Map;","import * as React from \"react\"\r\nimport ClickableMarkerOptions from \"./ClickableMarkerOptions\";\r\n\r\nconst Marker: React.FC<ClickableMarkerOptions> = (options) => {\r\n  const [marker, setMarker] = React.useState<google.maps.Marker>();\r\n  const [infoWindow, setInfoWindow] = React.useState<google.maps.InfoWindow>();\r\n\r\n  React.useEffect(() => {\r\n    var markerListener: google.maps.MapsEventListener = {\r\n      remove: () => {}\r\n    }\r\n    if (!marker) {\r\n      const newMarker = new google.maps.Marker();\r\n      markerListener = newMarker.addListener<\"click\">(\"click\", () => options.updateRestaurant(options.restaurantName))\r\n      setMarker(newMarker);\r\n    }\r\n\r\n    // remove marker from map on unmount\r\n    return () => {\r\n      if (marker) {\r\n        marker.setMap(null);\r\n        google.maps.event.removeListener(markerListener)\r\n      }\r\n    };\r\n  }, [marker, options, options.restaurantName, options.podcasters]);\r\n\r\n  React.useEffect(() => {\r\n    if (!infoWindow && marker) {\r\n      const content = \"<h4>\" + options.restaurantName + \"</h4>\" + options.podcasters.map((podcaster) => {\r\n        return \"<p>\" + podcaster + \"</p>\"\r\n      }).join(\"\") + \"<a href=\" + options.url + \" target='_blank'>Google Maps Link</a>\";\r\n      setInfoWindow(new google.maps.InfoWindow({ content: content }))\r\n    }\r\n  }, [infoWindow, marker, options.podcasters, options.restaurantName, options.url])\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setOptions(options);\r\n    }\r\n  }, [marker, options]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker && infoWindow) {\r\n      if (options.restaurantName === options.openRestaurant) {\r\n        infoWindow.open(undefined, marker);\r\n      }\r\n      else {\r\n        infoWindow.close();\r\n      }\r\n    }\r\n  }, [marker, options.restaurantName, options.openRestaurant, infoWindow])\r\n\r\n  React.useEffect(() => {\r\n    if(marker && options.map) {\r\n      marker.setMap(options.map)\r\n    }\r\n  }, [marker, options.map])\r\n\r\n  return null;\r\n};\r\nexport default Marker;","import * as React from \"react\";\r\nimport Marker from \"./Marker\";\r\nimport MarkerListOptions from \"./MarkerListOptions\";\r\n\r\nconst MarkerList = (options: MarkerListOptions) => {\r\n    const markers = []\r\n    for(let restaurantName in options.restaurants){\r\n        const restaurantData = options.restaurants[restaurantName]\r\n        const marker = <Marker \r\n                          key={restaurantName} \r\n                          position={restaurantData.location}\r\n                          restaurantName={restaurantName}\r\n                          podcasters={restaurantData.podcasters}\r\n                          openRestaurant={options.openRestaurant}\r\n                          updateRestaurant={options.setOpenRestaurant}\r\n                          map={options.map}\r\n                          url={restaurantData.url}>  \r\n                        </Marker>\r\n        markers.push(marker)\r\n    }\r\n    return <>{markers}</>;\r\n}\r\n\r\nexport default MarkerList;","import { Row, Col, ListGroup } from 'react-bootstrap';\r\nimport './OffMenuMap.css';\r\nimport { RestaurantData } from './Types';\r\n\r\nfunction compareRestaurant(a: RestaurantData, b: RestaurantData) {\r\n    return a.restaurant.localeCompare(b.restaurant)\r\n}\r\n\r\nfunction PlaceList(props: {\r\n    restaurantData: RestaurantData[],\r\n    setOpenRestaurant: (newRestaurant: string) => void,\r\n    openRestaurant: string\r\n}) {\r\n\r\n    const listItems = props.restaurantData.sort(compareRestaurant).map(function (data) {\r\n        const restaurantPodcasters = data.podcasters.sort().join(\", \");\r\n        return (<ListGroup.Item\r\n            action\r\n            onClick={() => props.setOpenRestaurant(data.restaurant)}\r\n            variant={data.restaurant === props.openRestaurant ? \"warning\" : undefined}\r\n            key={data.restaurant}>\r\n            <Row>\r\n                <Col>{data.restaurant}</Col><Col style={{ \"textAlign\": \"right\" }}>{restaurantPodcasters}</Col>\r\n            </Row></ListGroup.Item>)\r\n    })\r\n\r\n\r\n    return (\r\n        <Col>\r\n            <ListGroup style={{ \"overflowY\": \"auto\", \"overflowX\": \"hidden\", \"maxHeight\": \"60vh\", \"border\": \"1px solid #e9e9e9\" }} variant=\"flush\">\r\n                {listItems}\r\n            </ListGroup>\r\n            <p style={{\"color\": \"white\"}}>Created by Tom Jager using data from <a href='https://www.offmenupodcast.co.uk/restaurants' style={{\"color\": \"white\"}}>https://www.offmenupodcast.co.uk/restaurants</a>. You can get in touch at tjager22@gmail.com</p>\r\n        </Col>\r\n    )\r\n}\r\nexport default PlaceList;","import * as React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\nimport PlaceList from './PlaceList';\r\nimport { S3RestaurantDataMap, RestaurantData } from './Types';\r\n\r\nfunction filterRestaurants(s3RestaurantData: S3RestaurantDataMap, area: string, podcaster: string, restaurant: string) {\r\n    var restaurantsToDisplay: RestaurantData[] = []\r\n    for (let key in s3RestaurantData) {\r\n        let value = s3RestaurantData[key]\r\n        const areaFilter = area === \"\" || area === value.area\r\n        const podcasterFilter = podcaster === \"\" || value.podcasters.includes(podcaster)\r\n        const restaurantFilter = restaurant === \"\" || restaurant === key\r\n        if(areaFilter && podcasterFilter && restaurantFilter){\r\n            restaurantsToDisplay.push(value)\r\n        }\r\n    }\r\n    return restaurantsToDisplay;\r\n}\r\n\r\nfunction getListOfPodcasters(s3RestaurantData: S3RestaurantDataMap) {\r\n    var podcasters: Set<string> = new Set();\r\n    for (let key in s3RestaurantData) {\r\n        let value = s3RestaurantData[key]\r\n        for (var p of value.podcasters) {\r\n            podcasters.add(p)\r\n        }\r\n    }\r\n    return Array.from(podcasters.values());\r\n}\r\n\r\nfunction getListOfAreas(s3RestaurantData: S3RestaurantDataMap) {\r\n    var areas: Set<string> = new Set();\r\n    for (let key in s3RestaurantData) {\r\n        let value = s3RestaurantData[key];\r\n        areas.add(value.area);\r\n    }\r\n    return Array.from(areas.values());\r\n}\r\n\r\ntype Item = { name: string }\r\nfunction getItems(keys: string[]): Item[] {\r\n    return keys.map((key) => { return { name: key, id: key } });\r\n}\r\n\r\nfunction clearFilterIfEmpty(inputEvent: React.FocusEvent<HTMLInputElement>, setSearchState: (s: string) => void) {\r\n    if(inputEvent.target.value === \"\"){\r\n        setSearchState(\"\");\r\n    }\r\n}\r\n\r\nfunction RestaurantList(props: {\r\n    s3RestaurantData: S3RestaurantDataMap,\r\n    setOpenRestaurant: (newRestaurant: string) => void,\r\n    openRestaurant: string\r\n}) {\r\n    const [restaurant, setRestaurant] = React.useState<string>(\"\")\r\n    const [area, setArea] = React.useState<string>(\"\")\r\n    const [podcaster, setPodcaster] = React.useState<string>(\"\")\r\n\r\n    const listOfAreas = getListOfAreas(props.s3RestaurantData)\r\n    const listOfPodcasters = getListOfPodcasters(props.s3RestaurantData)\r\n\r\n    const areaItems = getItems(listOfAreas)\r\n    const areaSearchBox = <ReactSearchAutocomplete<Item>\r\n        showIcon={false}\r\n        items={areaItems}\r\n        onSelect={(result) => setArea(result.name)}\r\n        onClear={() => setArea(\"\")}\r\n        onFocus={(input) => clearFilterIfEmpty(input, setArea)}></ReactSearchAutocomplete>\r\n\r\n    const podcasterItems = getItems(listOfPodcasters)\r\n    const podcasterSearchBox = <ReactSearchAutocomplete<Item>\r\n        showIcon={false}\r\n        items={podcasterItems}\r\n        onSelect={(result) => setPodcaster(result.name)}\r\n        onClear={() => setPodcaster(\"\")}\r\n        onFocus={(input) => clearFilterIfEmpty(input, setPodcaster)}></ReactSearchAutocomplete>\r\n\r\n    const restaurantItems = getItems(Object.keys(props.s3RestaurantData))\r\n    const restaurantSearchBox = <ReactSearchAutocomplete<Item>\r\n        showIcon={false}\r\n        items={restaurantItems}\r\n        onSelect={(result) => setRestaurant(result.name)}\r\n        onClear={() => setRestaurant(\"\")}\r\n        onFocus={(input) => clearFilterIfEmpty(input, setRestaurant)}></ReactSearchAutocomplete>\r\n\r\n    const restaurantData = filterRestaurants(props.s3RestaurantData, area, podcaster, restaurant);\r\n    const placeList = <PlaceList\r\n        restaurantData={restaurantData}\r\n        setOpenRestaurant={props.setOpenRestaurant}\r\n        openRestaurant={props.openRestaurant} />\r\n\r\n    var restaurantList = (<Row>\r\n                            <Row>\r\n                                <Row style={{\"textAlign\": \"center\"}}><h3 style={{\"color\": \"white\"}}>Filters</h3></Row>\r\n                                <Row style={{\"textAlign\": \"center\"}}>\r\n                                    <Col sm=\"4\" style={{\"zIndex\": 3}}><h4 style={{\"color\": \"white\"}}>City</h4>{areaSearchBox}</Col>\r\n                                    <Col sm=\"4\" style={{\"zIndex\": 2}}><h4 style={{\"color\": \"white\"}}>Guest</h4>{podcasterSearchBox}</Col>\r\n                                    <Col sm=\"4\" style={{\"zIndex\": 1}}><h4 style={{\"color\": \"white\"}}>Restaurant</h4>{restaurantSearchBox}</Col>\r\n                                </Row>\r\n                            </Row>\r\n                            <Row style={{\"paddingTop\": \"2vh\", \"zIndex\": 0}}>\r\n                                {placeList}\r\n                            </Row>\r\n                        </Row>)\r\n\r\n    return restaurantList\r\n}\r\n\r\nexport default RestaurantList;","import * as React from \"react\"\r\n\r\nconst UserMarker: React.FC<google.maps.MarkerOptions> = (options) => {\r\n  const [marker, setMarker] = React.useState<google.maps.Marker>();\r\n\r\n  React.useEffect(() => {\r\n    if (!marker) {\r\n      const newMarker = new google.maps.Marker();\r\n      setMarker(newMarker);\r\n    }\r\n\r\n    // remove marker from map on unmount\r\n    return () => {\r\n      if (marker) {\r\n        marker.setMap(null);\r\n      }\r\n    };\r\n  }, [marker]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setOptions(options);\r\n    }\r\n  }, [marker, options]);\r\n\r\n  React.useEffect(() => {\r\n    if(marker && options.map) {\r\n      marker.setMap(options.map)\r\n    }\r\n  }, [marker, options.map])\r\n\r\n  return null;\r\n};\r\nexport default UserMarker;","import axios from \"axios\"\r\nimport * as React from \"react\";\r\nimport Map from \"./Map\";\r\nimport MarkerList from \"./MarkerList\";\r\nimport { Wrapper, Status } from \"@googlemaps/react-wrapper\";\r\nimport RestaurantList from \"./RestaurantList\";\r\nimport { S3Data } from \"./Types\";\r\nimport { Button, Col, Container, Row, Spinner } from \"react-bootstrap\";\r\nimport UserMarker from \"./UserMarker\";\r\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary'\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst render = (status: Status) => {\r\n  return <h1>{status}</h1>;\r\n};\r\n\r\nconst londonLatLng = { lat: 51.5072, lng: 0.1276 }\r\n\r\nfunction getRestaurantDataFromS3() {\r\n  const url = 'https://bk3ucgz21i.execute-api.eu-west-1.amazonaws.com/default/getRestaurantDataFromS3'\r\n  const AxiosInstance = axios.create(); // Create a new Axios Instance \r\n  // Send an async HTTP Get request to the url\r\n  return AxiosInstance.get(url).then(\r\n    function (result) {\r\n      console.log(\"Retrieved S3 Data\")\r\n      return result.data as S3Data\r\n    },\r\n    function (_error) {\r\n      return \"Request failed\"\r\n    }\r\n  )\r\n}\r\n\r\nfunction handleGetCurrentPosition(success: (lat: number, lng: number) => void, failure: () => void) {\r\n  navigator.geolocation.getCurrentPosition(\r\n    (result) => {\r\n      success(result.coords.latitude, result.coords.longitude);\r\n    },\r\n    (_error) => {\r\n      failure()\r\n    });\r\n}\r\n\r\nfunction getUserLocation(success: (lat: number, lng: number) => void, failure: () => void) {\r\n  var _sBrowser, sUsrAg = navigator.userAgent;\r\n  var isSafari = sUsrAg.indexOf(\"Safari\") > -1;\r\n  \r\n  if (isSafari) {\r\n    if ('geolocation' in navigator) {\r\n      handleGetCurrentPosition(success, failure)\r\n    }\r\n    else {\r\n      failure();\r\n    }\r\n  }\r\n  else if (navigator.geolocation) {\r\n    navigator.permissions\r\n      .query({ name: \"geolocation\" })\r\n      .then(function (result) {\r\n        if (result.state === \"granted\") {\r\n          handleGetCurrentPosition(success, failure)\r\n        } else if (result.state === \"prompt\") {\r\n          failure();\r\n        } else if (result.state === \"denied\") {\r\n          failure();\r\n        }\r\n        result.onchange = function (this: PermissionStatus, ev: Event) {\r\n          console.log(\"Permission status change\")\r\n          if (this.state === \"granted\") {\r\n            handleGetCurrentPosition(success, failure)\r\n          }\r\n          else {\r\n            failure();\r\n          }\r\n        };\r\n      });\r\n  }\r\n  else {\r\n    failure();\r\n  }\r\n}\r\n\r\nconst ErrorMessage = ({ error, resetErrorBoundary }: FallbackProps) => (<div role=\"alert\">\r\n  <p>Sorry this service is unavailable</p>\r\n</div>)\r\n\r\nconst App: React.VFC = () => {\r\n  // [START maps_react_map_component_app_state]\r\n  const [s3Data, setS3Data] = React.useState<S3Data>(null);\r\n  const [openRestaurant, setOpenRestaurant] = React.useState<string>(\"\");\r\n  const [userLocation, setUserLocation] = React.useState<{ lat: number, lng: number } | null>(null)\r\n  const [center, setCenter] = React.useState<{ lat: number, lng: number }>(londonLatLng)\r\n\r\n  React.useEffect(() => {\r\n    if (s3Data == null) {\r\n      getRestaurantDataFromS3().then(success => setS3Data(success as S3Data))\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    if (userLocation == null) {\r\n      getUserLocation((lat, lng) => setUserLocation({ lat: lat, lng: lng }), () => { setUserLocation(null) });\r\n    }\r\n  });\r\n\r\n  if (s3Data != null) {\r\n\r\n    var restaurantList = <RestaurantList\r\n      s3RestaurantData={s3Data.restaurants}\r\n      setOpenRestaurant={(newRestaurant) => setOpenRestaurant(newRestaurant)}\r\n      openRestaurant={openRestaurant}></RestaurantList>\r\n    var markers = <MarkerList\r\n      restaurants={s3Data.restaurants}\r\n      openRestaurant={openRestaurant}\r\n      setOpenRestaurant={(newRestaurant) => setOpenRestaurant(newRestaurant)}\r\n    ></MarkerList>\r\n\r\n    const buttonStyle = { \"width\": \"100%\" }\r\n    var focusUserLocationButton = <Button disabled style={buttonStyle}>Find My Location</Button>\r\n    var userLocationMarker = null\r\n    if (userLocation) {\r\n      focusUserLocationButton = <Button\r\n        onClick={() => { setCenter(userLocation) }}\r\n        style={buttonStyle}>Find My Location</Button>\r\n      userLocationMarker = <UserMarker\r\n        position={userLocation}\r\n        icon={{\r\n          fillColor: '#4272f5',\r\n          fillOpacity: 1,\r\n          strokeWeight: 1,\r\n          strokeColor: \"#ffffff\",\r\n          path: faCircle.icon[4] as string,\r\n          scale: 0.02,\r\n          anchor: {\r\n            x: faCircle.icon[0] / 2,\r\n            y: faCircle.icon[1],\r\n            equals: (other) => {\r\n              if (!other) return false;\r\n              return other.x === faCircle.icon[0] / 2 && other.y === faCircle.icon[1];\r\n            }\r\n          }\r\n        }}\r\n        clickable={false} />\r\n    }\r\n\r\n    return (\r\n      <ErrorBoundary\r\n        FallbackComponent={ErrorMessage}>\r\n        <Helmet> <style>{'body { background-color: #fcb345; }'}</style></Helmet>\r\n        <Container style={{ \"paddingTop\": \"3vh\" }}>\r\n          <Row><h1 style={{\"textAlign\": \"center\", \"color\": \"white\"}}>THE OFF MENU MAP</h1></Row>\r\n          <Row>\r\n            <Col sm=\"6\" style={{ \"padding\": \"1vh\" }}>\r\n              <Wrapper apiKey={\"AIzaSyCXdXiYdIRNAinnF4qF5gu-3NZLhYL0NUU\"} render={render}>\r\n                <Map\r\n                  center={center}\r\n                  style={{ \"flexGrow\": \"1\", \"height\": \"81vh\" }}\r\n                  zoom={8}>\r\n                  {markers}\r\n                  {userLocationMarker}\r\n                </Map>\r\n              </Wrapper>\r\n              <Row style={{ \"height\": \"2vh\" }}></Row>\r\n              {focusUserLocationButton}\r\n            </Col>\r\n            <Col sm=\"6\" style={{ \"padding\": \"1vh\" }}>\r\n              {restaurantList}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n  else {\r\n    return <ErrorBoundary\r\n              FallbackComponent={ErrorMessage}>\r\n              <Container style={{ \"textAlign\": \"center\", \"lineHeight\": \"100vh\" }}>\r\n                <Spinner animation=\"border\" variant=\"warning\"></Spinner>\r\n              </Container>\r\n            </ErrorBoundary>\r\n  }\r\n  // [END maps_react_map_component_app_return]\r\n};\r\n\r\n      export default App;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}